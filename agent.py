# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Oj2bx7nlP1n7JImnn-A84NDYAuBqSYb
"""

from langchain_core.prompts import ChatPromptTemplate
from langchain_groq import ChatGroq
import os
from langchain.tools import Tool
from langchain.agents import initialize_agent, AgentType
from langchain.utilities import SerpAPIWrapper
from bs4 import BeautifulSoup
import requests

llm = ChatGroq(temperature=0, groq_api_key="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", model_name="mixtral-8x7b-32768")

def web_search(query):
    search = SerpAPIWrapper()
    return search.run(query)

web_search_tool = Tool(
    name="Web Search",
    func=web_search,
    description="Performs web searches to find relevant information when the LLM lacks knowledge."
)

# Web Scraping Function
def web_scraper(url):
    try:
        headers = {"User-Agent": "Mozilla/5.0"}
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            paragraphs = soup.find_all('p')
            text = '\n'.join([p.get_text() for p in paragraphs])
            return text[:1000]  # Limit text length for efficiency
        else:
            return "Failed to retrieve data."
    except Exception as e:
        return f"Error: {str(e)}"

web_scraping_tool = Tool(
    name="Web Scraper",
    func=web_scraper,
    description="Extracts readable content from a given webpage."
)

# Initialize LangChain Agent
agent = initialize_agent(
    tools=[web_search_tool, web_scraping_tool],
    llm=llm,
    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,
    verbose=True,
    handle_parsing_errors=True
)

# Query Processing Function
def process_query(user_query):
    response = agent.run(user_query)
    return response

if __name__ == "__main__":
    while True:
        query = input("Ask me anything: ")
        if query.lower() == "exit":
            break
        print("\nProcessing Query...\n")
        print(process_query(query))